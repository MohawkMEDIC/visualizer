/*
 * AUDIT REPOSITORY DATA DEFINITION FILE
 *
 *
 */


-- @SEQUENCE
-- SECURITY PRINCIPAL IDENTIFIER
CREATE SEQUENCE PCPL_SEQ START WITH 1 INCREMENT BY 1;

-- @TABLE
-- SECURITY PRINCIPAL TABLE - REPRESENTS A UNIQUE TOKEN FOR IDENTIFYING A USER SUCH AS A SECURITY ID, SAML TOKEN, OR OTHER SESSION DATA.
CREATE TABLE PCPL_TBL
(
	PCPL_ID		DECIMAL(20,0) NOT NULL DEFAULT nextval('PCPL_SEQ'), -- UNIQUE IDENTIFIER FOR THE PRINCIPAL MAP
	DAT_PRI		BYTEA NOT NULL, -- SECURITY DATA RELATED TO THE PRINCIPAL, THIS CAN BE A WINDOWS SID AN LDAP DN OR SOME OTHER TOKEN OF THE USER'S IDENTITY ISSUED BY THE SECURITY SYSTEM.
	DAT_HASH	VARCHAR(256) NOT NULL, -- A SHA256 HASH OF THE DAT_PRI FIELD USED FOR INDEXING
	NAME		VARCHAR(48) NOT NULL, -- A FRIENDLY NAME FOR THE PRINICPAL / SESSION ... CAN BE THE USERNAME THAT OWNED THE SESSION/PRINCIPAL
	CONSTRAINT PK_PCPL_TBL PRIMARY KEY (PCPL_ID)
);

-- @SEQUENCE
-- CODE ID SEQUENCE
CREATE SEQUENCE CD_SEQ START WITH 1 INCREMENT BY 1;

-- @TABLE
-- CODES - A TABLE RESPONSIBLE FOR STORING CODES
CREATE TABLE CD_TBL
(
	CD_ID			DECIMAL(20,0) NOT NULL DEFAULT nextval('CD_SEQ'), -- CODE IDENTIFICATION
	CD_MNEMONIC		VARCHAR(48) NOT NULL, -- CODE MNEMONIC
	CD_DOMAIN		VARCHAR(64) NOT NULL, -- CODIFICATION SYSTEM
	CD_DISPLAY		TEXT, -- DISPLAY NAME
	CONSTRAINT PK_CD_TBL PRIMARY KEY (CD_ID)
);

-- @INDEX 
-- LOOKUP BY CODE MNEMONIC AND SYSTEM
CREATE UNIQUE INDEX CD_CD_MNEMONIC_SYS_IDX ON CD_TBL(CD_DOMAIN,CD_MNEMONIC);

-- @INSERT
-- DEFAULT CODE VALUES 
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('1','AuditableObjectType','Person');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('2','AuditableObjectType','System Object');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('3','AuditableObjectType','Organization');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('4','AuditableObjectType','Other');

INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('1','AuditableObjectRole','Patient');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('2','AuditableObjectRole','Location');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('3','AuditableObjectRole','Report');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('4','AuditableObjectRole','Resource');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('5','AuditableObjectRole','Master File');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('6','AuditableObjectRole','User');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('7','AuditableObjectRole','List');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('8','AuditableObjectRole','Doctor');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('9','AuditableObjectRole','Subscriber');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('10','AuditableObjectRole','Guarantor');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('11','AuditableObjectRole','Security User');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('12','AuditableObjectRole','Security Group');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('13','AuditableObjectRole','Security Resource');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('14','AuditableObjectRole','Security Granularity Definition');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('15','AuditableObjectRole','Provider');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('16','AuditableObjectRole','Data Destination');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('17','AuditableObjectRole','Data Repository');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('18','AuditableObjectRole','Schedule');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('19','AuditableObjectRole','Customer');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('20','AuditableObjectRole','Job');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('21','AuditableObjectRole','Job Stream');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('22','AuditableObjectRole','Table');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('23','AuditableObjectRole','Routing Criteria');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('24','AuditableObjectRole','Query');

INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('1','AuditableObjectLifecycle','Creation');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('2','AuditableObjectLifecycle','Import');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('3','AuditableObjectLifecycle','Amendment');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('4','AuditableObjectLifecycle','Verification');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('5','AuditableObjectLifecycle','Translation');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('6','AuditableObjectLifecycle','Access');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('7','AuditableObjectLifecycle','Deidentification');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('8','AuditableObjectLifecycle','Aggregation');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('9','AuditableObjectLifecycle','Report');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('10','AuditableObjectLifecycle','Export');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('11','AuditableObjectLifecycle','Disclosure');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('12','AuditableObjectLifecycle','Receipt of Disclosure');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('13','AuditableObjectLifecycle','Archiving');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('14','AuditableObjectLifecycle','Logical Deletion');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('15','AuditableObjectLifecycle','Permanent Erasure');

INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('1','RFC-3881','Medical Record');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('2','RFC-3881','Patient Number');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('3','RFC-3881','Encounter Number');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('4','RFC-3881','Enrollee Number');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('5','RFC-3881','Social Security Number');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('6','RFC-3881','Account Number');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('7','RFC-3881','Guarantor Number');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('8','RFC-3881','Report Name');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('9','RFC-3881','Report Number');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('10','RFC-3881','Search Critereon');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('11','RFC-3881','User Identifier');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('12','RFC-3881','Uri');

INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('urn:uuid:a54d6aa5-d40d-43f9-88c5-b4633d873bdd','IHE XDS Meta Data','Submission Set');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('urn:uuid:a7058bb9-b4e4-4307-ba5b-e3f0ab85e12d','IHE XDS Meta Data','Submission Set Author');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('urn:uuid:aa543740-bdda-424e-8c96-df4873be8500','IHE XDS Meta Data','Submission Set Content Type');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('urn:uuid:96fdda7c-d067-4183-912e-bf5ee74998a8','IHE XDS Meta Data','Submission Set Unique Id');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('urn:uuid:7edca82f-054d-47f2-a032-9b2a5b5186c1','IHE XDS Meta Data','Document Entry');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('urn:uuid:93606bcf-9494-43ec-9b4e-a7748d1a838d','IHE XDS Meta Data','Document Entry Author');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('urn:uuid:41a5887f-8865-4c09-adf7-e362475b143a','IHE XDS Meta Data','Document Entry Class Code');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('urn:uuid:f4f85eac-e6cb-4883-b524-f2705394840f','IHE XDS Meta Data','Document Entry Confidentiality Code');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('urn:uuid:2c6b8cb7-8b2a-4051-b291-b1ae6a575ef4','IHE XDS Meta Data','Document Entry Event Code List');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('urn:uuid:a09d5840-386c-46f2-b5ad-9c3699a4309d','IHE XDS Meta Data','Document Entry Format Code');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('urn:uuid:f33fb8ac-18af-42cc-ae0e-ed0b0bdb91e1','IHE XDS Meta Data','Document Entry Health Care Fcility Type');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('urn:uuid:58a6f841-87b3-4a3e-92fd-a8ffeff98427','IHE XDS Meta Data','Document Entry Patient Id');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('urn:uuid:cccf5598-8b07-4b77-a05e-ae952c785ead','IHE XDS Meta Data','Document Entry Practice Setting');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('urn:uuid:f0306f51-975f-434e-a61c-c59651d33983','IHE XDS Meta Data','Document Entry Type Code');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('urn:uuid:2e82c1f6-a085-4c72-9da3-8640a32e42ab','IHE XDS Meta Data','Document Entry Unique Id');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('urn:uuid:d9d542f3-6cc4-48b6-8870-ea235fbc94c2','IHE XDS Meta Data','Folder');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('urn:uuid:1ba97051-7806-41a8-a48b-8fce7af683c5','IHE XDS Meta Data','Folder Code List');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('urn:uuid:f64ffdf0-4b97-4e06-b79f-a52b38ec2f8a','IHE XDS Meta Data','Folder Patient Id');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('urn:uuid:75df8f67-9973-4fbe-a900-df66cefecc5a','IHE XDS Meta Data','Folder Unique Id');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('urn:uuid:917dc511-f7da-4417-8664-de25b34d3def','IHE XDS Meta Data','Append');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('urn:uuid:60fd13eb-b8f6-4f11-8f28-9ee000184339','IHE XDS Meta Data','Replacement');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('urn:uuid:ede379e6-1147-4374-a943-8fcdcf1cd620','IHE XDS Meta Data','Transform');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('urn:uuid:b76a27c7-af3c-4319-ba4c-b90c1dc45408','IHE XDS Meta Data','Transform / Replace');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('urn:uuid:8ea93462-ad05-4cdc-8e54-a8084f6aff94','IHE XDS Meta Data','Sign');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('urn:uuid:10aa1a4b-715a-4120-bfd0-9760414112c8','IHE XDS Meta Data','Document Entry Stub');

INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('ITI-1','IHE Transactions','Maintain Time');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('ITI-2','IHE Transactions','Get User Authentication');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('ITI-3','IHE Transactions','Get Service Ticket');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('ITI-4','IHE Transactions','Kerberized Communication');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('ITI-5','IHE Transactions','Join Context');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('ITI-6','IHE Transactions','Change Context');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('ITI-7','IHE Transactions','Leave Context');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('ITI-8','IHE Transactions','Patient Identity Feed');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('ITI-9','IHE Transactions','PIX Query');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('ITI-10','IHE Transactions','PIX Update Notification');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('ITI-11','IHE Transactions','Retrieve Specific Information for Display');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('ITI-12','IHE Transactions','Retrieve Document for Display');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('ITI-13','IHE Transactions','Follow Context');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('ITI-14','IHE Transactions','Register Document Set');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('ITI-15','IHE Transactions','Provide and Register Document Set');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('ITI-16','IHE Transactions','Query Registry');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('ITI-17','IHE Transactions','Retrieve Documents');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('ITI-18','IHE Transactions','Registry Stored Query');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('ITI-19','IHE Transactions','Authenticate Node');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('ITI-20','IHE Transactions','Record Audit Event');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('ITI-21','IHE Transactions','Patient Demographics Query');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('ITI-22','IHE Transactions','Patient Demographics and Visit Query');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('ITI-23','IHE Transactions','Find Personnel White Pages');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('ITI-24','IHE Transactions','Query Personnel White Pages');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('ITI-30','IHE Transactions','Patient Identity Management');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('ITI-31','IHE Transactions','Patient Encounter Management');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('ITI-32','IHE Transactions','Distribute Document Set on Media');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('ITI-38','IHE Transactions','Cross Gateway Query');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('ITI-39','IHE Transactions','Cross Gateway Retrieve');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('ITI-40','IHE Transactions','Provide X-User Assertion');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('ITI-41','IHE Transactions','Provide and Register Document Set-b');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('ITI-42','IHE Transactions','Register Document Set-b');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('ITI-43','IHE Transactions','Retrieve Document Set');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('ITI-44','IHE Transactions','Patient Identity Feed HL7v3');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('ITI-45','IHE Transactions','PIXv3 Query');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('ITI-46','IHE Transactions','PIXv3 Update Notification');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('ITI-47','IHE Transactions','Patient Demographics Query HL7v3');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('ITI-51','IHE Transactions','Multi-Patient Stored Query');

INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('1','NetworkAccessPointType','Machine Name');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('2','NetworkAccessPointType','IP Address');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('3','NetworkAccessPointType','Telephone Number');

INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('C','ActionType','Create');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('R','ActionType','Read');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('U','ActionType','Update');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('D','ActionType','Delete');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('E','ActionType','Execute');

INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('0','OutcomeIndicator','Success');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('4','OutcomeIndicator','Minor Fail');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('8','OutcomeIndicator','Serious Fail');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('12','OutcomeIndicator','Major Fail');

INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('IHE0001','IHE','Provisioning Event');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('IHE0002','IHE','Medication Event');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('IHE0003','IHE','Resource Assignment');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('IHE0004','IHE','Care Episode');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('IHE0005','IHE','Care Protocol');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('IHE0006','IHE','Disclosure');

INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('CDT-100002','CDT', 'Patient Search Activity');

INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('110111','DCM','Procedure Record');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('110112','DCM','Query');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('110114','DCM','User Authentication');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('110110','DCM','Patient Record');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('110109','DCM','Order Record');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('110108','DCM','Network Activity');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('110107','DCM','Import');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('110106','DCM','Export');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('110153,','DCM','Source');
INSERT INTO CD_TBL (CD_MNEMONIC, CD_DOMAIN, CD_DISPLAY) VALUES ('110152,','DCM','Destination');

-- @TABLE 
-- STATUS CODETABLE
CREATE TABLE STATUS_CDTBL
(
	CD_ID	DECIMAL(2) NOT NULL, -- IDENTIFIER FOR THE STATE
	NAME	VARCHAR(20) NOT NULL, -- NAME FOR THE STATE
	CONSTRAINT PK_STATUS_CDTBL PRIMARY KEY (CD_ID)
);

-- @DATA
-- STATUS CODES
INSERT INTO STATUS_CDTBL VALUES (0, 'NEW'); -- DATA IS NEW AND UNVERIFIED
INSERT INTO STATUS_CDTBL VALUES (1, 'ACTIVE'); -- DATA IS VERIFIED AND ACTIVE
INSERT INTO STATUS_CDTBL VALUES (2, 'HELD'); -- DATA WAS ACTIVE BUT IS NOW ON HOLD AND REQUIRES A REVIEW
INSERT INTO STATUS_CDTBL VALUES (3, 'NULLIFIED'); -- DATA IS NULLIFIED AND WAS NEVER INTENDED TO BE ENTERED
INSERT INTO STATUS_CDTBL VALUES (4, 'OBSOLETE'); -- DATA IS OBSOLETE AND HAS BEEN REPLACED
INSERT INTO STATUS_CDTBL VALUES (5, 'ARCHIVED'); -- DATA WAS ACTIVE BUT IS NO LONGER RELEVANT

-- @SEQUENCE
-- IDENTIFIER FOR NODES
CREATE SEQUENCE NODE_SEQ START WITH 1 INCREMENT BY 1;

-- @TABLE
-- NODE TABLE - RESPONSIBLE FOR THE STORAGE OF NODE INFORMATION. A NODE IS EITHER A PHYSICAL MACHINE ON THE NETWORK OR 
-- A LOGICAL MACHINE MADE UP OF PHYSICAL MACHINES IN WHICH CASE THIS TABLE IS A PARENT/CHILD RELATION
-- RATIONALE : THE SERVER CAN USE THIS TABLE TO VERIFY THAT A NODE IS
--		1. REGISTERED WITH THE AFFINITY DOMAIN
--		2. THAT THE REGISTERED NODE AND THE REGISTERED X509 CERT MATCH THOSE USED (THIS IS IN ADDITION TO THE HOSTNAME MATCH REQUIREMENT)
--		3. THAT A REGISTERED NODE MAY BE A MEMBER OF A LOGICAL GROUP OF NODES THAT CAN PERFORM THE TASK
--
-- NOTE: THIS TABLE IS USED TO VERIFY TRANSPORT LAYER DETAILS ABOUT THE INBOUND SYSLOG MESSAGE NOT THE LOGICAL OPERATION AS CONVEYED THROUGH THE
--		 AUDIT MESSAGE ITSELF.
CREATE TABLE NODE_TBL
(
	NODE_ID			DECIMAL(20,0) NOT NULL DEFAULT nextval('NODE_SEQ'), -- UNIQUE IDENTIFIER FOR THE NODE
	CONSTRAINT PK_NODE_TBL PRIMARY KEY (NODE_ID)
);

-- @TABLE
-- NODE VERSION TABLE - IDENTIFIES CHANGES THAT OCCUR TO A NODE OVER TIME
CREATE TABLE NODE_VRSN_TBL
(
	NODE_VRSN_ID		DECIMAL(20,0) NOT NULL DEFAULT nextval('NODE_SEQ'), -- UNIQUE IDENTIFIER FOR THE VERSION
	NODE_ID			DECIMAL(20,0) NOT NULL, -- LINK TO THE NODE THAT THIS VERSION APPLIES TO
	NAME			VARCHAR(256) NOT NULL, -- A FRIENDLY NAME FOR THE NODE
	IP_HOST			VARCHAR(256) NOT NULL, -- THE IP ADDRESS OR HOST NAME OF THE MACHINE ON THE NETWORK
	IP_HOST_TYP		CHAR(1) NOT NULL DEFAULT 'I', -- THE TYPE OF HOST ENTRY 
	X509_THUMB		VARCHAR(128) NOT NULL, -- THE X509 THUMBPRINT FOR THIS NODE
	GRP_ID			DECIMAL(20,0), -- THE GROUP IDENTIFIER IF THIS NODE PRESENTS ITSELF AS A LOGICAL HOST
	STATUS_CS		DECIMAL(2) NOT NULL DEFAULT 0, -- THE STATUS OF THE NODE
	CRT_PCPL_ID		DECIMAL(20,0), -- THE SECURITY PRINCIPAL THAT IS RESPONSIBLE FOR THE CREATION OF THIS VERSION
	CRT_UTC			TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP, -- THE CREATION TIME OF THE VERSION
	OBSLT_UTC		TIMESTAMPTZ, -- THE DATE THAT THE VERSION WAS OBSOLETED
	RPLC_VRSN_ID		DECIMAL(20,0), -- THE IDENTIFIER OF THE REPLACEMENT VERSION
	CONSTRAINT PK_NODE_VRSN_TBL PRIMARY KEY (NODE_VRSN_ID),
	CONSTRAINT FK_NODE_VRSN_RPLC_VRSN_NODE_VRSN_TBL FOREIGN KEY (RPLC_VRSN_ID) REFERENCES NODE_VRSN_TBL(NODE_VRSN_ID),
	CONSTRAINT FK_NODE_VRSN_CRT_PCPL_ID_PCPL_TBL FOREIGN KEY (CRT_PCPL_ID) REFERENCES PCPL_TBL(PCPL_ID),
	CONSTRAINT FK_NODE_VRSN_GRP_ID_NODE_TBL FOREIGN KEY (GRP_ID) REFERENCES NODE_TBL(NODE_ID),
	CONSTRAINT CK_NODE_VRSN_IP_HOST_TYP CHECK (IP_HOST_TYP IN ('I','D')),
	CONSTRAINT FK_NODE_VRSN_STATUS_CS_STATUS_CDTBL FOREIGN KEY (STATUS_CS) REFERENCES STATUS_CDTBL(CD_ID),
	CONSTRAINT FK_NODE_VRSN_NODE_ID_NODE_TBL FOREIGN KEY (NODE_ID) REFERENCES NODE_TBL(NODE_ID)
);

-- @INDEX
-- NODE IP INDEX
CREATE INDEX NODE_VRSN_IP_IDX ON NODE_VRSN_TBL(IP_HOST);

-- @INDEX
-- NODE X509 CERTIFICATE THUMBPRINT INDEX
CREATE INDEX NODE_VRSN_X509_IDX ON NODE_VRSN_TBL(X509_THUMB);

-- @INDEX
-- NODE GROUP INDEX
CREATE INDEX NODE_VRSN_GRP_IDX ON NODE_VRSN_TBL(GRP_ID);

-- @INDEX 
-- NODE VERSION NODE ID
CREATE INDEX NODE_VRSN_NODE_IDX ON NODE_VRSN_TBL(NODE_ID);

-- TODO : NODE CONTACT INFORMATION

-- @SEQUENCE
-- REGISTERED PROCESS 
CREATE SEQUENCE PROC_SEQ START WITH 1 INCREMENT BY 1;

-- @TABLE
-- PROCESS TABLE - RESPONSIBLE FOR THE STORAGE OF REGISTERED PROCESSES KNOWN TO THE AFFINITY DOMAIN
CREATE TABLE PROC_TBL
(
	PROC_ID		DECIMAL(20,0) NOT NULL DEFAULT nextval('PROC_SEQ'), -- UNIQUE IDENTIFIER FOR THE REGISTERED PROCESS
	CONSTRAINT PK_PROC_TBL PRIMARY KEY (PROC_ID)
);

-- @TABLE
-- PROCESS VERSION TABLE - USED TO STORE CHANGES TO PROCESS INFORMATION
CREATE TABLE PROC_VRSN_TBL
(
	PROC_VRSN_ID		DECIMAL(20,0) NOT NULL DEFAULT nextval('PROC_SEQ'), -- UNIQUE IDENTIFIER FOR THE PROCESS VERSION
	PROC_ID			DECIMAL(20,0) NOT NULL, -- PROCESS ID THIS VERSION APPLIES TO
	NAME			VARCHAR(256) NOT NULL, -- A FRIENDLY NAME FOR THE PROCESS
	EXE_NAME		VARCHAR(256) NOT NULL, -- THE EXECUTABLE NAME THAT APPEARS IN SYSLOG MESSAGES
	PRNT_PROC_ID		DECIMAL(20,0) NOT NULL, -- THE PARENT PROCESS IF THIS IS PART OF A GROUP
	STATUS_CS		DECIMAL(2) NOT NULL DEFAULT 0, -- THE STATUS OF THE PROCESS
	CRT_PCPL_ID		DECIMAL(20,0), -- THE SECURITY PRINCIPAL THAT IS RESPONSIBLE FOR THE CREATION OF THIS VERSION
	CRT_UTC			TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP, -- THE CREATION TIME OF THE VERSION
	OBSLT_UTC		TIMESTAMPTZ, -- THE DATE THAT THE VERSION WAS OBSOLETED
	RPLC_VRSN_ID		DECIMAL(20,0), -- THE IDENTIFIER OF THE REPLACEMENT VERSION
	CONSTRAINT PK_PROC_VRSN_TBL PRIMARY KEY (PROC_VRSN_ID),
	CONSTRAINT FK_PROC_VRSN_PROC_ID_PROC_TBL FOREIGN KEY (PROC_ID) REFERENCES PROC_TBL(PROC_ID),
	CONSTRAINT FK_PROC_VRSN_CRT_PCPL_ID_PCPL_TBL FOREIGN KEY (CRT_PCPL_ID) REFERENCES PCPL_TBL(PCPL_ID),
	CONSTRAINT FK_PROC_VRSN_PRNT_PROC_ID_PROC_TBL FOREIGN KEY (PRNT_PROC_ID) REFERENCES PROC_TBL(PROC_ID),
	CONSTRAINT FK_PROC_VRSN_STATUS_CS_STATUS_CDTBL FOREIGN KEY (STATUS_CS) REFERENCES STATUS_CDTBL(CD_ID),
	CONSTRAINT FK_PROC_VRSN_RPLC_VRSN_ID_PROC_VRSN_TBL FOREIGN KEY (RPLC_VRSN_ID) REFERENCES PROC_VRSN_TBL(PROC_VRSN_ID)
);

-- TODO : PROCESS CONTACT INFORMATION
-- @INDEX
-- LOOKUP PROCESS BY EXE_NAME
CREATE INDEX PROC_VRSN_EXE_NAME_IDX ON PROC_VRSN_TBL(EXE_NAME);

-- @INDEX 
-- LOOKUP NODE VERSION BY NODE ID
CREATE INDEX PROC_VRSN_PROC_ID_IDX  ON PROC_VRSN_TBL(PROC_ID);

-- @TABLE
-- PROCESS TO NODE VERSION TABLE
CREATE TABLE PROC_NODE_TBL
(
	PROC_ID				DECIMAL(20,0) NOT NULL, -- THE PROCESS LINK THAT RUNS ON THE NODE
	NODE_ID				DECIMAL(20,0) NOT NULL, -- THE NODE IDENTIFIER
	EFFT_NODE_VRSN_ID		DECIMAL(20,0) NOT NULL, -- THE EFFECTIVE VERSION OF THE NODE LINK
	OBSLT_NODE_VRSN_ID		DECIMAL(20,0), -- THE VERSION OF THE NODE WHERE THIS LINK IS NO LONGER APPLICABLE
	CONSTRAINT PK_PROC_NODE_TBL PRIMARY KEY (PROC_ID, NODE_ID),
	CONSTRAINT FK_PROC_NODE_PROC_ID_PROC_TBL FOREIGN KEY (PROC_ID) REFERENCES PROC_TBL(PROC_ID),
	CONSTRAINT FK_PROC_NODE_NODE_ID_NODE_TBL FOREIGN KEY (NODE_ID) REFERENCES NODE_TBL(NODE_ID),
	CONSTRAINT FK_PROC_NODE_EFFT_NODE_VRSN_ID_NODE_VRSN_TBL FOREIGN KEY (EFFT_NODE_VRSN_ID) REFERENCES NODE_VRSN_TBL(NODE_VRSN_ID),
	CONSTRAINT FK_PROC_NODE_OBSLT_NODE_VRSN_ID_NODE_VRSN_TBL FOREIGN KEY (OBSLT_NODE_VRSN_ID) REFERENCES NODE_VRSN_TBL(NODE_VRSN_ID)
);

-- @INDEX
-- LOOKUP PROCESSES BY NODE ID
CREATE INDEX PROC_NODE_PROC_ID_IDX ON PROC_NODE_TBL(NODE_ID);

-- @INDEX
-- VERSION RANGE CHECK
CREATE INDEX PROC_NODE_VRSN_IDX ON PROC_NODE_TBL(EFFT_NODE_VRSN_ID, OBSLT_NODE_VRSN_ID);

-- @SEQUENCE
-- AUDIT SESSION SEQUENCE
CREATE SEQUENCE AUD_SES_SEQ START WITH 1 INCREMENT BY 1;

-- @TABLE
-- AUDIT SESSION TABLE - THIS IS USED FOR PERSISTENT CONNECTIONS OVER TCP WHERE MORE THAN ONE AUDIT MESSAGE CAN BE SENT
-- AND IS MERELY USED TO CORRELATE MESSAGES SENT ON THE SAME CONNECTION
CREATE TABLE AUD_SES_TBL
(
	SES_ID		DECIMAL(20,0) NOT NULL DEFAULT nextval('AUD_SES_SEQ'), -- UNIQUE IDENTIFIER FOR THE SESSION
	CRT_UTC		TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP, -- THE TIMESTAMP WHEN THE MESSAGE WAS RECEIVED
	CONSTRAINT PK_AUD_SES_TBL PRIMARY KEY (SES_ID)
);

-- @SEQUENCE
-- AUDIT MESSAGE IDENTITY SEQUENCE
CREATE SEQUENCE AUD_MSG_SEQ START WITH 1 INCREMENT BY 1;

-- @TABLE
-- AUDIT MESSAGES - USED TO STORE THE FACT THAT AN AUDIT MESSAGE WAS RECEIVED BY THE SYSTEM BUT NOT NECESSARILY PROCESSED
CREATE TABLE AUD_MSG_TBL
(
	MSG_ID				DECIMAL(20,0) NOT NULL DEFAULT nextval('AUD_MSG_SEQ'), -- THE UNIQUE IDENTIFIER FOR THE AUDIT
	CORR_ID				VARCHAR(48) NOT NULL, -- THE CORRELATION IDENTIFIER FOR THE AUDIT MESSAGE	
	SES_ID				DECIMAL(20,0) NOT NULL, -- THE SESSION TO WHICH THE AUDIT BELONGS
	SNDR_NODE_VRSN_ID	DECIMAL(20,0) NOT NULL, -- THE NODE WHICH SENT THE AUDIT
	SNDR_PROC_VRSN_ID	DECIMAL(20,0) NOT NULL, -- THE SENDER PROCESS ID
	RCVR_NODE_VRSN_ID	DECIMAL(20,0) NOT NULL, -- THE NODE WHICH ORIGINALLY RECEIVED THE AUDIT
	CONSTRAINT PK_AUD_MSG_TBL PRIMARY KEY (MSG_ID),
	CONSTRAINT FK_AUD_MSG_SES_ID_SES_TBL FOREIGN KEY (SES_ID) REFERENCES AUD_SES_TBL(SES_ID),
	CONSTRAINT FK_AUD_MSG_SNDR_NODE_VRSN_ID_NODE_VRSN_TBL FOREIGN KEY (SNDR_NODE_VRSN_ID) REFERENCES NODE_VRSN_TBL(NODE_VRSN_ID),
	CONSTRAINT FK_AUD_MSG_RCVR_NODE_VRSN_ID_NODE_VRSN_TBL FOREIGN KEY (RCVR_NODE_VRSN_ID) REFERENCES NODE_VRSN_TBL(NODE_VRSN_ID)
);

-- INDEX ON THE AUDIT MESSAGE NODE VERSION
CREATE INDEX AUD_MSG_SNDR_NODE_VRSN_IDX ON AUD_MSG_TBL(SNDR_NODE_VRSN_ID);

-- INDEX ON THE AUDIT MESSAGE NODE VERSION
CREATE INDEX AUD_MSG_RCVR_NODE_VRSN_IDX ON AUD_MSG_TBL(RCVR_NODE_VRSN_ID);

-- @TABLE
-- AUDIT MULLIGAN TABLE - THIS ALLOWS ADMINISTRATORS TO ACCEPT AUDITS 
CREATE TABLE AUD_MSG_VRSN_TBL
(
	MSG_VRSN_ID			DECIMAL(20,0) NOT NULL DEFAULT nextval('AUD_MSG_SEQ'), -- THE UNIQUE IDENTIFIER FOR THE AUDIT
	MSG_ID				DECIMAL(20,0) NOT NULL, -- POINTER TO THE MESSAGE THIS VERSION DESCRIBES
	STATUS_CS			DECIMAL(2) NOT NULL, -- THE STATUS OF THE AUDIT MESSAGE
	CRT_PCPL_ID			DECIMAL(20,0) NOT NULL, -- THE SECURITY PRINCIPAL THE WAS RESPONSIBLE FOR THE CREATION OF THIS VERSION
	CRT_UTC				TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP, -- THE TIMESTAMP WHEN THE MESSAGE VERSION WAS CREATED
	OBSLT_UTC			TIMESTAMPTZ, -- THE TIMESTAMP THE MESSAGE VERSION WAS OBSOLETED
	RPLC_VRSN_ID		DECIMAL(20,0), -- THE VERSION THIS VERSION REPLACES
	CONSTRAINT PK_AUD_MSG_VRSN_TBL PRIMARY KEY (MSG_VRSN_ID),
	CONSTRAINT FK_AUD_MSG_VRSN_MSG_ID_MSG_TBL FOREIGN KEY (MSG_ID) REFERENCES AUD_MSG_TBL(MSG_ID),
	CONSTRAINT FK_AUD_MSG_VRSN_STATUS_CD_STATUS_CDTBL FOREIGN KEY (STATUS_CS) REFERENCES STATUS_CDTBL(CD_ID),
	CONSTRAINT FK_AUD_MSG_VRSN_CRT_PCPL_ID_PCPL_TBL FOREIGN KEY (CRT_PCPL_ID) REFERENCES PCPL_TBL(PCPL_ID),
	CONSTRAINT CK_STATUS_CS CHECK (STATUS_CS IN (0, 1, 2, 5)), -- AUDIT MESSAGES CAN ONLY EVER BE IN THE NEW, ACTIVE, HELD OR ARCHIVE STATES
	CONSTRAINT FK_AUD_MSG_VRSN_RPLC_VRSN_ID_AUD_MSG_VRSN_TBL FOREIGN KEY (RPLC_VRSN_ID) REFERENCES AUD_MSG_VRSN_TBL(MSG_VRSN_ID)
);

-- @INDEX
-- LOOKUP AUDIT DATA BY CORRELATION TOKEN
CREATE INDEX AUD_MSG_AUD_CORR_ID_IDX ON AUD_MSG_TBL(CORR_ID);

-- @INDEX
-- LOOKUP AUDIT DATA BY SENDER
CREATE INDEX AUD_MSG_SNDR_NODE_VRSN_ID_IDX ON AUD_MSG_TBL(SNDR_NODE_VRSN_ID);

-- @SEQUENCE
-- ERROR IDENTIFIER SEQUENCE
CREATE SEQUENCE AUD_ERR_SEQ START WITH 1 INCREMENT BY 1;

-- @TABLE
-- AUDIT ERROR TABLE - USED TO STORE ERROR VALIDATION ABOUT AUDITS
CREATE TABLE AUD_ERR_TBL
(
	ERR_ID		DECIMAL(20,0) NOT NULL DEFAULT nextval('AUD_ERR_SEQ'), -- THE ERROR UNIQUE IDENTIFIER
	AUD_MSG_ID	DECIMAL(20,0) NOT NULL, -- THE AUDIT MESSAGE TO WHICH THE ERROR APPLIES
	ERR_TXT		VARCHAR(512) NOT NULL, -- DESCRIPTIVE TEXT ABOUT THE ERROR
	ERR_STACK	TEXT, -- STACK TRACE IF AVAILABLE
	ERR_PRNT_ID	DECIMAL(20,0), -- THE PARENT OF THIS AUDIT (IF IT CAUSED ANOTHER ERROR)
	CONSTRAINT PK_AUD_ERR_TBL PRIMARY KEY (ERR_ID),
	CONSTRAINT FK_AUD_ERR_AUD_MSG_ID_AUD_MSG_TBL FOREIGN KEY (AUD_MSG_ID) REFERENCES AUD_MSG_TBL(MSG_ID),
	CONSTRAINT FK_AUD_ERR_ERR_PRNT_ID_AUD_ERR_TBL FOREIGN KEY (ERR_PRNT_ID) REFERENCES AUD_ERR_TBL(ERR_ID)
);

-- @INDEX
-- LOOKUP ERRORS BY AUDIT MESSAGE ID
CREATE INDEX AUD_ERR_AUD_MSG_ID_IDX ON AUD_ERR_TBL(AUD_MSG_ID);

-- @SEQUENCE
-- AUDIT EVENTS IDENTIFIERS
CREATE SEQUENCE AUD_EVT_SEQ	START WITH 1 INCREMENT BY 1;

-- @TABLE
-- AUDIT EVENTS - KEEPS TRACK OF THE DATA RELATED TO THE AUDIT EVENTS
CREATE TABLE AUD_EVT_TBL
(
	EVT_ID		DECIMAL(20,0) NOT NULL DEFAULT nextval('AUD_EVT_SEQ'), -- UNIQUE IDENTIFIER FOR THE EVENT 
	ACTION_CD	DECIMAL(20,0) NOT NULL, -- THE ACTION CODE FOR THE EVENT
	OUTCOME_CD	DECIMAL(20,0) NOT NULL, -- THE ACTION OUTCOME
	EVT_CD		DECIMAL(20,0) NOT NULL, -- THE EVENT ID CODE
	EVT_TS		TIMESTAMPTZ NOT NULL, -- THE TIME THE EVENT OCCURRED
	CONSTRAINT PK_AUD_EVT_TBL PRIMARY KEY (EVT_ID),
	CONSTRAINT FK_AUD_EVT_ACTION_CD_CD_TBL FOREIGN KEY (ACTION_CD) REFERENCES CD_TBL(CD_ID),
	CONSTRAINT FK_AUD_EVT_OUTCOME_CD_CD_TBL FOREIGN KEY (OUTCOME_CD) REFERENCES CD_TBL(CD_ID),
	CONSTRAINT FK_AUD_EVT_EVT_CD_CD_TBL FOREIGN KEY (EVT_CD) REFERENCES CD_TBL(CD_ID)
);

-- @TABLE
-- AUDIT EVENT TYPE TABLE - RESPONSIBLE FOR REFERENCING THE TYPES OF AUDITS
CREATE TABLE AUD_EVT_TYP_TBL
(
	EVT_ID		DECIMAL(20,0) NOT NULL, -- UNIQUE IDENTIFIER FOR THE EVENT
	CD_ID		DECIMAL(20,0) NOT NULL, -- IDENTIFIER OF THE TYPE CODE
	CONSTRAINT PK_AUD_EVT_TYP_TBL PRIMARY KEY (EVT_ID, CD_ID),
	CONSTRAINT FK_AUD_EVT_TYP_EVT_ID_AUD_EVT_TBL FOREIGN KEY (EVT_ID) REFERENCES AUD_EVT_TBL(EVT_ID),
	CONSTRAINT FK_AUD_EVT_TYP_CD_ID_CD_TBL FOREIGN KEY (CD_ID) REFERENCES CD_TBL(CD_ID)
);

-- @SEQUENCE
-- ENTERPRISE SITE IDENTIIFER 
CREATE SEQUENCE AUD_ENT_STE_SEQ START WITH 1 INCREMENT BY 1;

-- @TABLE 
-- AUDIT ENTERPRISE SITES - USED FOR LINKING AUDIT MESSAGES IN A LOGICAL FASHION TOGETHER
-- NOTE: THIS SHOULD BE A CREATE ONLY OPTION (NEVER MODIFY)
CREATE TABLE AUD_ENT_STE_TBL
(
	STE_ID		DECIMAL(20,0) NOT NULL DEFAULT nextval('AUD_ENT_STE_SEQ'), -- UNQIUE INTERNAL IDENTIFIER FOR THE ENTERPRISE SITE
	CONSTRAINT PK_AUD_STE_TBL PRIMARY KEY (STE_ID)
);

-- @TABLE 
-- AUDIT ENTERPRISE SITES - USED FOR LINKING AUDIT MESSAGES IN A LOGICAL FASHION TOGETHER
-- NOTE: THIS SHOULD BE A CREATE ONLY OPTION (NEVER MODIFY)
CREATE TABLE AUD_ENT_STE_VRSN_TBL
(
	STE_VRSN_ID		DECIMAL(20,0) NOT NULL DEFAULT nextval('AUD_ENT_STE_SEQ'), -- VERSION IDENTIFIER
	STE_ID			DECIMAL(20,0) NOT NULL, -- LINKS THE VERSION TO THE SITE
	NAME			VARCHAR(48) NOT NULL, -- THE FRIENDLY NAME FOR THE ENTERPRISE SITE
	STATUS_CS		DECIMAL(20,0) NOT NULL DEFAULT 0, -- THE STATUS OF THE SITE
	CRT_PCPL_ID		DECIMAL(20,0) NOT NULL, -- THE SECURITY PRINCIPAL THAT CREATED THE ENTERPRISE SITE
	CRT_UTC			TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP, -- THE CREATION TIME OF THE ENTERPRISE SITE ENTRY
	OBSLT_UTC		TIMESTAMPTZ, -- THE OBSOLETION TIME OF THE SITE ENTRY
	RPLC_VRSN_ID	DECIMAL(20,0), -- THE VERSION THIS VERSION REPLACES
	CONSTRAINT PK_AUD_STE_VRSN_TBL PRIMARY KEY (STE_VRSN_ID),
	CONSTRAINT FK_AUD_STE_VRSN_CRT_PCPL_ID_PCPL_TBL FOREIGN KEY (CRT_PCPL_ID) REFERENCES PCPL_TBL(PCPL_ID),
	CONSTRAINT FK_AUD_STE_VRSN_STE_ID_AUD_ENT_STE_TBL FOREIGN KEY (STE_ID) REFERENCES AUD_ENT_STE_TBL(STE_ID),
	CONSTRAINT FK_AUD_STE_VRSN_RPLC_VRSN_ID_AUD_ENT_STE_VRSN_TBL FOREIGN KEY (RPLC_VRSN_ID) REFERENCES AUD_ENT_STE_VRSN_TBL(STE_VRSN_ID),
	CONSTRAINT FK_AUD_STE_VRSN_STATUS_CS_STATUS_CDTBL FOREIGN KEY (STATUS_CS) REFERENCES STATUS_CDTBL(CD_ID)
);

-- @TABLE
-- ENTERPRISE SITE EXTERNAL IDENTIFIERS TABLE
CREATE TABLE AUD_ENT_STE_EXT_ID_TBL
(
	STE_ID					DECIMAL(20,0) NOT NULL, -- THE NODE TO WHICH THE ID APPLIES
	EXT_ID					VARCHAR(64) NOT NULL, -- THE EXTERNAL IDENTIFICATION OF THE ENTERPRISE SITE
	STE_EFFT_VRSN_ID		DECIMAL(20,0) NOT NULL, -- THE EFFECTIVE VERSION 
	STE_OBSLT_VRSN_ID		DECIMAL(20,0), -- THE OBSOLETAION VERSION
	CONSTRAINT PK_AUD_ENT_STE_EXT_ID_TBL PRIMARY KEY (EXT_ID, STE_EFFT_VRSN_ID),
	CONSTRAINT FK_AUD_ENT_STE_EXT_ID_STE_AUD_ENT_STE_TBL FOREIGN KEY (STE_ID) REFERENCES AUD_ENT_STE_TBL(STE_ID),
	CONSTRAINT FK_AUD_ENT_STE_EXT_ID_STE_EFFT_VRSN_ID_AUD_STE_VRSN_TBL FOREIGN KEY (STE_EFFT_VRSN_ID) REFERENCES AUD_ENT_STE_VRSN_TBL(STE_VRSN_ID),
	CONSTRAINT FK_AUD_ENT_STE_EXT_ID_STE_OBSLT_VRSN_ID_AUD_STE_VRSN_TBL FOREIGN KEY (STE_OBSLT_VRSN_ID) REFERENCES AUD_ENT_STE_VRSN_TBL(STE_VRSN_ID)
);

-- @INDEX
-- LOOKUP BY EXTERNAL IDENTIFICATION
CREATE UNIQUE INDEX AUD_ENT_STE_VRSN_EXT_ID_IDX ON AUD_ENT_STE_EXT_ID_TBL(EXT_ID);

-- @TABLE 
-- AUDIT ENTERPRISE SITES TO NODES TABLE - THIS ASSOCIATIVE TABLE LINKS ONE OR MORE PHYSICAL NODES TO AN ENTERPRISE SITE
-- AND CAN BE USED TO VALIDATE MESSAGES OR RAISE FLAGS WHEN OTHER SYSTEMS ARE USING ENTERPRISE SITES NOT LINKED TO THE 
-- PHYSICAL NODE
CREATE TABLE AUD_ENT_STE_NODE_TBL
(
	STE_ID				DECIMAL(20,0) NOT NULL, -- THE ENTERPRISE SITE IDENTIFIER
	NODE_ID				DECIMAL(20,0) NOT NULL, -- THE ENTERPRISE SITE IDENTIFIER
	STE_EFFT_VRSN_ID		DECIMAL(20,0) NOT NULL, -- THE EFFECTIVE VERSION 
	STE_OBSLT_VRSN_ID		DECIMAL(20,0), -- THE OBSOLETAION VERSION
	CONSTRAINT PK_AUD_ENT_STE_NODE_TBL PRIMARY KEY (NODE_ID, STE_EFFT_VRSN_ID),
	CONSTRAINT FK_AUD_ENT_STE_NODE_STE_AUD_ENT_STE_TBL FOREIGN KEY (STE_ID) REFERENCES AUD_ENT_STE_TBL(STE_ID),
	CONSTRAINT FK_AUD_ENT_STE_NODE_NODE_ID_NODE_TBL FOREIGN KEY (NODE_ID) REFERENCES NODE_TBL(NODE_ID),
	CONSTRAINT FK_AUD_ENT_STE_NODE_STE_EFFT_VRSN_ID_AUD_STE_VRSN_TBL FOREIGN KEY (STE_EFFT_VRSN_ID) REFERENCES AUD_ENT_STE_VRSN_TBL(STE_VRSN_ID),
	CONSTRAINT FK_AUD_ENT_STE_NODE_STE_OBSLT_VRSN_ID_AUD_STE_VRSN_TBL FOREIGN KEY (STE_OBSLT_VRSN_ID) REFERENCES AUD_ENT_STE_VRSN_TBL(STE_VRSN_ID)
);

-- @INDEX
-- AUDIT ENTERPRISE SITE VERSION INDEX
CREATE INDEX AUD_ENT_STE_STE_VRSN_IDX ON AUD_ENT_STE_NODE_TBL(STE_EFFT_VRSN_ID, STE_OBSLT_VRSN_ID);

-- @TABLE
-- AUDIT SOURCE IDENTIFICATION TABLE - THIS ASSOCIATIVE TABLE LINKS ONE PHYSICAL NODE/PROCESS TO AN AUDIT SOURCE IDENTIFIER
CREATE TABLE AUD_ENT_SRC_TBL
(
	SRC_ID				DECIMAL(20,0) NOT NULL DEFAULT nextval('AUD_ENT_STE_SEQ'), -- UNIQUE INTERNAL IDENTIFIER FOR THE AUDIT SITE
	CONSTRAINT	PK_AUD_ENT_SRC_TBL PRIMARY KEY (SRC_ID)
);

-- @TABLE
-- AUDIT SOURCE ID VERSION TABLE
CREATE TABLE AUD_ENT_SRC_VRSN_TBL
(
	SRC_VRSN_ID		DECIMAL(20,0) NOT NULL DEFAULT nextval('AUD_ENT_STE_SEQ'), -- UNIQUE IDENTIFIER FOR THE VERSION
	SRC_ID			DECIMAL(20,0) NOT NULL, -- LINKS THE VERSION TO A SOURCE
	NAME			VARCHAR(48) NOT NULL, -- THE FRIENDLY NAME FOR THE ENTERPRISE SITE
	NODE_ID			DECIMAL(20,0) NOT NULL, -- THE NODE THAT THIS SOURCE IS LINKED TO
	PROC_ID			DECIMAL(20,0) NOT NULL, -- THE PROCESS IDENTIFIER THAT THIS SOURCE IS LINKED TO
	STATUS_CS		DECIMAL(20,0) NOT NULL DEFAULT 0, -- THE STATUS OF THE SITE
	CRT_PCPL_ID		DECIMAL(20,0) NOT NULL, -- THE SECURITY PRINCIPAL THAT CREATED THE AUDIT SOURCE
	CRT_UTC			TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP, -- THE CREATION TIME OF THE AUDIT SOURCE
	OBSLT_UTC		TIMESTAMPTZ, -- THE OBSOLETION TIME OF THE SOURCE ENTRY
	RPLC_VRSN_ID	DECIMAL(20,0), -- THE VERSION THIS VERSION REPLACES
	CONSTRAINT PK_AUD_ENT_SRC_VRSN_TBL PRIMARY KEY (SRC_VRSN_ID),
	CONSTRAINT FK_AUD_ENT_SRC_VRSN_CRT_PCPL_ID_PCPL_TBL FOREIGN KEY (CRT_PCPL_ID) REFERENCES PCPL_TBL(PCPL_ID),
	CONSTRAINT FK_AUD_ENT_SRC_VRSN_SRC_ID_AUD_SRC_TBL FOREIGN KEY (SRC_ID) REFERENCES AUD_ENT_SRC_TBL(SRC_ID),
	CONSTRAINT FK_AUD_ENT_SRC_VRSN_RPLC_VRSN_ID_AUD_SRC_VRSN_TBL FOREIGN KEY (RPLC_VRSN_ID) REFERENCES AUD_ENT_SRC_VRSN_TBL(SRC_VRSN_ID),
	CONSTRAINT FK_AUD_ENT_SRC_VRSN_STATUS_CS_STATUS_CDTBL FOREIGN KEY (STATUS_CS) REFERENCES STATUS_CDTBL(CD_ID),
	CONSTRAINT FK_AUD_ENT_SRC_VRSN_NODE_ID_NODE_TBL FOREIGN KEY (NODE_ID) REFERENCES NODE_TBL(NODE_ID),
	CONSTRAINT FK_AUD_ENT_SRC_VRSN_PROC_ID_PROC_TBL FOREIGN KEY (PROC_ID) REFERENCES PROC_TBL(PROC_ID)
);

-- @TABLE
-- STORES THE EXTERNAL IDENTIFIERS ALLOWED TO BE USED BY AN AUDIT ENTERPRISE SITE
CREATE TABLE AUD_ENT_SRC_EXT_ID_TBL
(
	SRC_ID					DECIMAL(20,0) NOT NULL, -- IDENTIFIER OF THE SITE TO WHICH THE EXTERNAL IDENTIFIER APPLIES
	EXT_ID					VARCHAR(64) NOT NULL, -- THE EXTERNAL IDENTIFICATION OF THE ENTERPRISE SITE
	SRC_EFFT_VRSN_ID		DECIMAL(20,0) NOT NULL, -- THE EFFECTIVE VERSION 
	SRC_OBSLT_VRSN_ID		DECIMAL(20,0), -- THE OBSOLETAION VERSION
	CONSTRAINT PK_AUD_ENT_SRC_EXT_ID_TBL PRIMARY KEY (EXT_ID, SRC_EFFT_VRSN_ID),
	CONSTRAINT FK_AUD_ENT_SRC_EXT_ID_SRC_AUD_ENT_SRC_TBL FOREIGN KEY (SRC_ID) REFERENCES AUD_ENT_SRC_TBL(SRC_ID),
	CONSTRAINT FK_AUD_ENT_SRC_EXT_ID_SRC_EFFT_VRSN_ID_AUD_SRC_VRSN_TBL FOREIGN KEY (SRC_EFFT_VRSN_ID) REFERENCES AUD_ENT_SRC_VRSN_TBL(SRC_VRSN_ID),
	CONSTRAINT FK_AUD_ENT_SRC_EXT_ID_SRC_OBSLT_VRSN_ID_AUD_SRC_VRSN_TBL FOREIGN KEY (SRC_OBSLT_VRSN_ID) REFERENCES AUD_ENT_SRC_VRSN_TBL(SRC_VRSN_ID)
);
	
-- @SEQUENCE
-- AUDIT SOURCE IDENTIFIER
CREATE SEQUENCE AUD_SRC_SEQ START WITH 1 INCREMENT BY 1;

-- @TABLE
-- AUDIT SOURCE IDENTIFICATION - LINKS A LOGICAL AUDIT SOURCE TO SITE AND SOURCE
CREATE TABLE AUD_SRC_TBL
(
	AUD_SRC_ID		DECIMAL(20,0) NOT NULL DEFAULT nextval('AUD_SRC_SEQ'), -- SURROGATE KEY
	EVT_ID			DECIMAL(20,0) NOT NULL, -- EVENT IDENTICIATION TO WHICH THIS SOURCE RECORD BELONGS
	STE_VRSN_ID		DECIMAL(20,0) NOT NULL, -- AUDIT ENTERPRISE SITE ID
	SRC_VRSN_ID		DECIMAL(20,0) NOT NULL, -- AUDIT ENTERPRSIE SOURCE ID
	CONSTRAINT PK_AUD_SRC_TBL PRIMARY KEY (AUD_SRC_ID),
	CONSTRAINT FK_AUD_SRC_EVT_ID_AUD_EVT_TBL FOREIGN KEY (EVT_ID) REFERENCES AUD_EVT_TBL(EVT_ID),
	CONSTRAINT FK_AUD_SRC_STE_VRSN_ID_AUD_ENT_STE_VRSN_TBL FOREIGN KEY (STE_VRSN_ID) REFERENCES AUD_ENT_STE_VRSN_TBL(STE_VRSN_ID),
	CONSTRAINT FK_AUD_SRC_SRC_VRSN_ID_AUD_ENT_SRC_VRSN_TBL FOREIGN KEY (SRC_VRSN_ID) REFERENCES AUD_ENT_SRC_VRSN_TBL(SRC_VRSN_ID)
);

-- INDEX FOR AUDIT SOURCE EVENT LOOKUP
CREATE INDEX AUD_SRC_EVT_ID_IDX ON AUD_SRC_TBL(EVT_ID);

-- INDEX FOR AUDIT SOURCE EVENT LOOKUP
CREATE INDEX AUD_SRC_STE_VRSN_ID_IDX ON AUD_SRC_TBL(STE_VRSN_ID);

-- INDEX FOR AUDIT SOURCE EVENT LOOKUP
CREATE INDEX AUD_SRC_SRC_VRSN_ID_IDX ON AUD_SRC_TBL(SRC_VRSN_ID);

-- @TABLE
-- AUDIT SOURCE TYPE CODE TABLE
CREATE TABLE AUD_SRC_TYP_TBL
(
	AUD_SRC_ID		DECIMAL(20,0) NOT NULL, -- THE SOURCE ENTRY THIS TYPE CODE RELATES
	CD_ID			DECIMAL(20,0) NOT NULL, -- THE TYPE CODE
	CONSTRAINT PK_AUD_SRC_TYP_TBL PRIMARY KEY (AUD_SRC_ID, CD_ID),
	CONSTRAINT FK_AUD_SRC_TYP_AUD_SRC_ID_AUD_SRC_TBL FOREIGN KEY (AUD_SRC_ID) REFERENCES AUD_SRC_TBL(AUD_SRC_ID),
	CONSTRAINT FK_AUD_SRC_TYP_CD_ID_CD_TBL FOREIGN KEY (CD_ID) REFERENCES CD_TBL(CD_ID)
);

-- @INDEX
-- LOOKUP SOURCE <> CODE BY SOURCE ID
CREATE INDEX AUD_SRC_TYP_AUD_SRC_ID_IDX ON AUD_SRC_TYP_TBL(AUD_SRC_ID);

-- @SEQUENCE
-- AUDIT PARTICIPANT IDENTIFIERS
CREATE SEQUENCE AUD_PTCPT_SEQ START WITH 1 INCREMENT BY 1;

-- @TABLE
-- AUDIT PARTICIPANT TABLE - KEEPS TRACK OF THE ACTIVE PARTICPANTS (NODES , USERS, ETC) THAT ARE ASSOCIATED 
-- WITH AN AUDIT EVENT.
CREATE TABLE AUD_PTCPT_TBL
(
	PTCPT_ID		DECIMAL(20,0) NOT NULL DEFAULT nextval('AUD_PTCPT_SEQ'), -- IDENTIFIER FOR THE AUDIT PARTICIPANT
	PTCPT_UID		VARCHAR(255) NOT NULL, -- THE USER IDENTIFICATION OF THE PARTICIPANT
	PTCPT_ALTID		VARCHAR(255) NOT NULL, -- ALTERNATE USER IDENTIFICATION OF THE PARTICIPANT
	CONSTRAINT PK_AUD_PTCPT_TBL PRIMARY KEY (PTCPT_ID)
);

-- @INDEX LOOKUP BY UID
CREATE UNIQUE INDEX AUD_PTCPT_PTCPT_UID_IDX ON AUD_PTCPT_TBL(PTCPT_UID);

-- @SEQUENCE 
-- AUDIT EVENT PARTICIPATION IDENTIFICATION KEY
CREATE SEQUENCE AUD_EVT_PTCPT_SEQ START WITH 1 INCREMENT BY 1;

-- @TABLE 
-- AUDIT PARTICIPANT EVENT TABLE
CREATE TABLE AUD_EVT_PTCPT_TBL
(
	EVT_PTCPT_ID	DECIMAL(20,0) NOT NULL DEFAULT nextval('AUD_EVT_PTCPT_SEQ'), -- SURROGATE KEY
	EVT_ID			DECIMAL(20,0) NOT NULL, -- THE EVENT IDENTIFIER
	PTCPT_ID		DECIMAL(20,0) NOT NULL, -- THE PARTICIPANT IDENTIFIER
	NODE_VRSN_ID	DECIMAL(20,0) NOT NULL, -- THE NODE THAT THE PARTICIPANT WAS USING
	IS_RQO			BOOLEAN NOT NULL, -- TRUE IF THE USER IS THE REQUESTOR
	CONSTRAINT PK_AUD_EVT_PTCPT_TBL PRIMARY KEY (EVT_PTCPT_ID), 
	CONSTRAINT FK_AUD_EVT_PTCPT_EVT_ID_AUD_EVT_TBL FOREIGN KEY (EVT_ID) REFERENCES AUD_EVT_TBL(EVT_ID),
	CONSTRAINT FK_AUD_EVT_PTCPT_PTCPT_ID_AUD_PTCPT_TBL FOREIGN KEY (PTCPT_ID) REFERENCES AUD_PTCPT_TBL(PTCPT_ID),
	CONSTRAINT FK_AUD_EVT_NODE_VRSN_ID_NODE_VRSN_TBL FOREIGN KEY (NODE_VRSN_ID) REFERENCES NODE_VRSN_TBL(NODE_VRSN_ID)
);

-- @INDEX
-- LOOK UP EVENT BY PARTICIPANT ID
CREATE INDEX AUD_EVT_PTCPT_PTCPT_ID_IDX ON AUD_EVT_PTCPT_TBL(PTCPT_ID);

-- @INDEX
-- LOOKUP EVENT PARTICIPATION BY EVENT ID
CREATE INDEX AUD_EVT_PTCPT_EVT_ID_IDX ON AUD_EVT_PTCPT_TBL(EVT_ID);

-- @TABLE
-- EVENT PARTICIPANT ROLE CODE TABLE
CREATE TABLE AUD_EVT_PTCPT_ROL_TBL
(
	EVT_PTCPT_ID		DECIMAL(20,0) NOT NULL, -- THE PARTICIPANT THIS ROLE QUALIFIES
	CD_ID			DECIMAL(20,0) NOT NULL, -- THE ROLE CODE
	CONSTRAINT PK_AUD_EVT_PTCPT_ROL_TBL PRIMARY KEY (EVT_PTCPT_ID, CD_ID),
	CONSTRAINT FK_AUD_EVT_PTCPT_ROL_EVT_PTCPT_ID_AUD_EVT_PTCPT_TBL FOREIGN KEY (EVT_PTCPT_ID) REFERENCES AUD_EVT_PTCPT_TBL(EVT_PTCPT_ID),
	CONSTRAINT FK_AUD_EVT_PTCPT_ROL_CD_ID_CD_TBL FOREIGN KEY (CD_ID) REFERENCES CD_TBL(CD_ID)
);

-- @SEQUENCE
-- AUDIT OBJECT ID
CREATE SEQUENCE AUD_OBJ_SEQ START WITH 1 INCREMENT BY 1;

-- @TABLE
-- AUDIT OBJECT TABLE - KEEPS TRACK OF THE PARTICIPANT OBJECTS IN THE AUDIT
CREATE TABLE AUD_OBJ_TBL
(
	OBJ_ID		DECIMAL(20,0) NOT NULL DEFAULT nextval('AUD_OBJ_SEQ'), -- UNIQUE IDENTIFIER FOR THE OBJECT
	EVT_ID		DECIMAL(20,0) NOT NULL, -- THE EVENT THE OBJECT RELATES TO
	OBJ_EXT_ID	VARCHAR(256) NOT NULL, -- EXTERNAL IDENTIFICATION FOR THE OBJECT
	TYP_CD		DECIMAL(20,0) NOT NULL, -- OBJECT TYPE CODE
	ROL_CD		DECIMAL(20,0) NOT NULL, -- OBJECT ROLE CODE
	LFCL_CD		DECIMAL(20,0), -- LIFECYCLE CODE
	ID_TYP_CD	DECIMAL(20,0) NOT NULL, -- THE TYPE OF AUDITABLE OBJECT
	OBJ_DTL		TEXT, -- THE OBJECT DETAIL
	OBJ_DTL_TYP	CHAR(1) DEFAULT 'Q', -- THE TYPE OF DETAIL PROVIDED, EITHER QUERY OR NAME
	CONSTRAINT PK_AUD_OBJ_TBL PRIMARY KEY (OBJ_ID),
	CONSTRAINT FK_AUD_OBJ_EVT_ID_AUD_EVT_TBL FOREIGN KEY (EVT_ID) REFERENCES AUD_EVT_TBL(EVT_ID),
	CONSTRAINT FK_AUD_OBJ_TYP_CD_CD_TBL FOREIGN KEY (TYP_CD) REFERENCES CD_TBL(CD_ID),
	CONSTRAINT FK_AUD_OBJ_ROL_CD_CD_TBL FOREIGN KEY (ROL_CD) REFERENCES CD_TBL(CD_ID),
	CONSTRAINT FK_AUD_OBJ_LFCL_CD_CD_TBL FOREIGN KEY (LFCL_CD) REFERENCES CD_TBL(CD_ID),
	CONSTRAINT FK_AUD_OBJ_ID_TYP_CD_CD_TBL FOREIGN KEY (ID_TYP_CD) REFERENCES CD_TBL(CD_ID)
);

-- @INDEX
-- LOOKUP DETAILS BY EVENT
CREATE INDEX AUD_OBJ_EVT_ID_IDX ON AUD_OBJ_TBL(EVT_ID);

-- @TABLE
-- AUDIT OBJECT IDENTIFICATION 
CREATE TABLE AUD_OBJ_DTL_TBL
(
	DTL_ID		DECIMAL(20,0) NOT NULL DEFAULT nextval('AUD_OBJ_SEQ'), -- UNIQUE IDENTIFIER FOR THE DETAIL
	OBJ_ID		DECIMAL(20,0) NOT NULL, -- OBJECT IDENTIFICATION
	OBJ_TYP		VARCHAR(255) NOT NULL, -- OBJECT TYPE
	OBJ_VAL		BYTEA NOT NULL, -- THE VALUE OF THE DETAIL
	CONSTRAINT PK_AUD_OBJ_DTL_TBL PRIMARY KEY (DTL_ID),
	CONSTRAINT FK_AUD_OBJ_DTL_OBJ_ID_AUD_OBJ_TBL FOREIGN KEY (OBJ_ID) REFERENCES AUD_OBJ_TBL(OBJ_ID)
);

-- @INDEX 
-- LOOKUP BY OBJECT
CREATE INDEX AUD_OBJ_DTL_OBJ_ID_IDX ON AUD_OBJ_DTL_TBL(OBJ_ID);
